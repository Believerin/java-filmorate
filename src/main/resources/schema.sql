DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS film CASCADE;
DROP TABLE IF EXISTS film_user CASCADE;
DROP TABLE IF EXISTS genre CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS genre_film CASCADE;
DROP TABLE IF EXISTS DIRECTORS CASCADE;
DROP TABLE IF EXISTS DIRECTORS_FILM CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS users_reviews_like_dislike CASCADE;

CREATE TABLE IF NOT EXISTS mpa (
    mpa_id int PRIMARY KEY,
    mpa_name varchar
);
CREATE TABLE IF NOT EXISTS film (
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_name varchar UNIQUE,
    description varchar(200),
    release_date date,
    duration int,
    mpa_id int REFERENCES mpa (mpa_id)
);
CREATE TABLE IF NOT EXISTS film_user (
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar UNIQUE,
    login varchar UNIQUE,
    name varchar,
    birthday date
);
CREATE TABLE IF NOT EXISTS genre (
    genre_id int PRIMARY KEY,
    genre_name varchar
);
CREATE TABLE IF NOT EXISTS friendship (
    user_id int REFERENCES film_user (user_id),
    friend_id int REFERENCES film_user (user_id),
    status varchar,
    CONSTRAINT friendship_pk PRIMARY KEY (user_id, friend_id)
);
CREATE TABLE IF NOT EXISTS likes (
    film_id int REFERENCES film (film_id),
    user_id int REFERENCES film_user (user_id),
    CONSTRAINT likes_pk PRIMARY KEY (film_id, user_id)
);
CREATE TABLE IF NOT EXISTS genre_film (
    film_id int REFERENCES film (film_id),
    genre_id int REFERENCES genre (genre_id),
    CONSTRAINT genre_film_pk PRIMARY KEY (film_id, genre_id)
);



CREATE TABLE IF NOT EXISTS reviews
(
    review_id   int PRIMARY KEY AUTO_INCREMENT NOT NULL,
    user_id     int                            NOT NULL,
    film_id     int                            NOT NULL,
    content     varchar(200),
    useful      int,
    is_positive boolean,

    UNIQUE (user_id, film_id),
    FOREIGN KEY (film_id) REFERENCES film (film_id),
    FOREIGN KEY (user_id) REFERENCES film_user (user_id)
);


CREATE TABLE IF NOT EXISTS users_reviews_like_dislike
(
    user_id      int NOT NULL,
    review_id int NOT NULL,
    isLike boolean,
    FOREIGN KEY (user_id) REFERENCES film_user (user_id),
    FOREIGN KEY (review_id) REFERENCES reviews (review_id),
    UNIQUE (user_id, review_id)
);